<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\HK_MvcOA_Model\\OA.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using HK_MvcOA_Dal;
using HK_MvcOA_IDal;
using System.Data.Entity;

namespace HK_MvcOA_DalFactory
{
	public partial class DBSession : IDBSession
    {
<#
// Emit Entity Types

foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		private I<#=entity.Name#>Dal _<#=entity.Name#>Dal;
        public I<#=entity.Name#>Dal <#=entity.Name#>Dal
        {
            get
            {
                if(_<#=entity.Name#>Dal == null)
                {
                    _<#=entity.Name#>Dal = AbstractFactory.Create<#=entity.Name#>Dal();
                }
                return _<#=entity.Name#>Dal;
            }
            set { _<#=entity.Name#>Dal = value; }
        }
<#}#>
	}	
}